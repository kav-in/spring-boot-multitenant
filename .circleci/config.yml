version: 2
jobs:
  build_and_test:
    docker:
      - image: circleci/openjdk:8-jdk
      
    working_directory: ~/repo

    environment:
      JVM_OPTS: -Xmx3200m
      TERM: dumb
    
    steps:
      - checkout

      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "build.gradle" }}
          - v1-dependencies-

      - setup_remote_docker:
          version: 17.05.0-ce

      - run: gradle dependencies

      - run: gradle clean build -xtest

      - run: gradle buildDocker -xtest

      - run: 
          command: |
            docker images
            pwd
            ls
            cd ~/repo/build/docker/
            ls

      - persist_to_workspace:
          root: build
          paths: 
            - docker/

      - save_cache:
          paths:
            - ~/.gradle
          key: v1-dependencies-{{ checksum "build.gradle" }}
        
  push_to_gcp:
    docker:
      - image: google/cloud-sdk
   
    working_directory: ~/repo

    steps:
      - checkout

      - setup_remote_docker:
          version: 17.05.0-ce

      - attach_workspace:
          at: ~/repo/build

      - run: 
          name: Setup Google Cloud SDK
          command: |
            cd ~/repo/build/docker
            ls
            docker build -t $GOOGLE_CLOUD_RESOURCE/$GOOGLE_PROJECT_ID/$PROJECT_NAME:latest .
            apt-get install -qq -y gettext
            echo $GCLOUD_SERVICE_KEY > ${HOME}/gcloud-service-key.json
            gcloud auth activate-service-account --key-file=${HOME}/gcloud-service-key.json
            gcloud --quiet config set project $GOOGLE_PROJECT_ID
            gcloud --quiet config set compute/zone $GOOGLE_COMPUTE_ZONE
            gcloud --quiet container clusters get-credentials ${GOOGLE_CLUSTER_NAME}
      - run: 
          name: Docker build and push
          command: |
            gcloud auth configure-docker
            docker images
            docker push $GOOGLE_CLOUD_RESOURCE/$GOOGLE_PROJECT_ID/$PROJECT_NAME:latest
      - run:
          name: Deploy to Kubernetes
          command: |
            envsubst < ~/repo/kubernet/kubernet_deployment.yml > ~/repo/patched_kubernet_deployment.yml
            kubectl apply -f ~/repo/patched_kubernet_deployment.yml
            kubectl rollout status deployment/${PROJECT_NAME}
workflows:
  version: 2
  build_test_deploy:
    jobs:
      - build_and_test
      - push_to_gcp:
          requires:
            - build_and_test
          filters:
            branches:
              only: master
